apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ '{{ include "k8s.name" . }}' }}-deployment
  labels:
    app: {{ '{{ include "k8s.name" . }}' }}
spec:
  replicas: {{ '{{ .Values.replicaCount }}' }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ '{{ include "k8s.name" . }}' }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ '{{ include "k8s.name" . }}' }}
    spec:
      volumes:
        - name: kafka-certs
          secret:
            secretName: {{ '{{ .Values.kafka.certName }}' }}
      containers:
        - name: {{ '{{ .Chart.Name }}' }}
          image: {{ '{{ .Values.image.repository }}:{{ .Values.image.tag }}' }}
          imagePullPolicy: {{ '{{ .Values.image.pullPolicy }}' }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: {{ '{{ .Values.worker.web_port }}' }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ '{{ include "k8s.name" . }}' }}-configmap
          volumeMounts:
            - name: kafka-certs
              mountPath: {{ '{{ .Values.kafka.certsPath }}' }}
              readOnly: true
          resources:
{{ '{{ toYaml .Values.resources | indent 12 }}' }}
    {{ '{{- with .Values.nodeSelector }}' }}
      nodeSelector:
{{ '{{ toYaml . | indent 8 }}' }}
    {{ '{{- end }}' }}
   {{ '{{- with .Values.affinity }}' }}
      affinity:
{{ '{{ toYaml . | indent 8 }}' }}
    {{ '{{- end }}' }}
    {{ '{{- with .Values.tolerations }}' }}
      tolerations:
{{ '{{ toYaml . | indent 8 }}' }}
    {{ '{{- end }}' }}
